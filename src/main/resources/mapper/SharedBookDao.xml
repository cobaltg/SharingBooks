<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sharingbooks.dao.SharedBookDao">
	
	<select id="querySharedBookById" parameterType="long" resultType="SharedBook">
	  select
	    book_id,book_name,book_description,master_phone,release_time
	  from
	    sharedbook
	  where 
	    book_id=#{bookId}
	</select>
	
	<select id="queryShareBookByBookInfo" resultType="SharedBook">
	  select
	    book_id,book_name,book_description,master_phone,release_time
	  from
	    sharedbook
	  <where>
	    <if test="bookName!=null and !&quot;&quot;.equals(bookName.trim())">and book_name like '%' #{bookName} '%'</if>
	    <if test="bookDescription!=null and !&quot;&quot;.equals(bookDescription.trim())">and book_description like '%' #{bookDescription} '%'</if>
	  </where>
	  order by book_id
	</select>
	
	<select id="countSharedBook" resultType="int">
	  select
	    count(*)
	  from
	    sharedbook
	  <where>
	    <if test="bookName!=null and !&quot;&quot;.equals(bookName.trim())">and book_name like '%' #{bookName} '%'</if>
	    <if test="bookDescription!=null and !&quot;&quot;.equals(bookDescription.trim())">and book_description like '%' #{bookDescription} '%'</if>
	  </where>
	</select>
	
	<select id="querySharedBookList" resultType="SharedBook">
	  select
	    book_id,book_name,book_description,master_phone,release_time
	  from
	    sharedbook
	  order by book_id limit #{offset},#{limit}
	</select>
	
	<select id="querySharedBookListByPage" resultType="SharedBook">
	  select
	    book_id,book_name,book_description,master_phone,release_time
	  from
	    sharedbook
	  <where>
	    <if test="bookName!=null and !&quot;&quot;.equals(bookName.trim())">and book_name like '%' #{bookName} '%'</if>
	    <if test="bookDescription!=null and !&quot;&quot;.equals(bookDescription.trim())">and book_description like '%' #{bookDescription} '%'</if>
	  </where>
	  order by book_id limit #{offset},#{limit}
	</select>
	
	<insert id="addSharedBook" parameterType="SharedBook">
	  insert into sharedbook
	    (book_name,book_description,master_phone,release_time)
	  values
	    (#{bookName},#{bookDescription},#{masterPhone},#{releaseTime})
	</insert>
	
	<delete id="reduceSharedBook" parameterType="long">
	  delete from sharedbook where book_id = #{bookId}
	</delete>
	
	<delete id="reduceSharedBookByShared">
	  delete 
	    from sharedbook
	  where
	    book_name = #{bookName} and master_phone = #{userPhone}
	</delete>
	
	<update id="updateSharedBook">
	  update 
	    sharedbook 
	  <set>
	  	<if test="bookName!=null and !&quot;&quot;.equals(bookName.trim())">book_name = #{bookName},</if>
	  	<if test="bookDescription!=null and !&quot;&quot;.equals(bookDescription.trim())">book_description = #{bookDescription}</if>
	  </set> 
 	  where 
 	    book_id=#{bookId}
	</update>
</mapper>